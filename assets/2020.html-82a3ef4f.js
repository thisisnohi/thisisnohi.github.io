import{_ as e,p as a,q as t,a1 as i}from"./framework-449724a9.js";const r={},d=i(`<h1 id="_2020" tabindex="-1"><a class="header-anchor" href="#_2020" aria-hidden="true">#</a> 2020</h1><h2 id="_2020总结" tabindex="-1"><a class="header-anchor" href="#_2020总结" aria-hidden="true">#</a> 2020总结</h2><ul><li>工作</li><li>经验</li><li>教训</li><li>改进</li></ul><h1 id="记录每一天" tabindex="-1"><a class="header-anchor" href="#记录每一天" aria-hidden="true">#</a> 记录每一天</h1><h2 id="注解属性-20200705" tabindex="-1"><a class="header-anchor" href="#注解属性-20200705" aria-hidden="true">#</a> 注解属性 20200705</h2><ul><li>Target</li><li>Renention</li></ul><h3 id="tomcat配置文件-host-server作用" tabindex="-1"><a class="header-anchor" href="#tomcat配置文件-host-server作用" aria-hidden="true">#</a> tomcat配置文件 HOST Server作用</h3><blockquote><p>参见：https://www.cnblogs.com/hongdada/p/6698003.html</p></blockquote><h3 id="tomcat-jetty-underrow" tabindex="-1"><a class="header-anchor" href="#tomcat-jetty-underrow" aria-hidden="true">#</a> tomcat jetty underrow</h3><ul><li><p>jetty</p><ul><li><p>参考：</p><ul><li>https://blog.csdn.net/shuaishuai1234/article/details/86625986</li><li>https://blog.csdn.net/shuaishuai1234/article/details/86627055</li></ul></li><li><p>命令</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>新项目，空文件，部署启动
JETTY_BASE=/tmp/mybase
mkdir $JETTY_BASE
cd $JETTY_BASE
cp $JETTY_HOME/demo-base/webapps/async-rest.war webapps/ROOT.war
java -jar $JETTY_HOME/start.jar --add-to-startd=http,deploy
命令用于创建一个新的根路径，同时激活HTTP connector和web 应用部署模块，并且拷贝一个web应用例子来部署

指定端口号
java -jar $JETTY_HOME/start.jar jetty.http.port=8081

添加并激活HTTPS和HTTP2模块
java -jar $JETTY_HOME/start.jar --add-to-startd=https,http2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul><h3 id="tomcat系统架构与设计模式" tabindex="-1"><a class="header-anchor" href="#tomcat系统架构与设计模式" aria-hidden="true">#</a> Tomcat系统架构与设计模式</h3><h3 id="servlet3-1-3-0-区别" tabindex="-1"><a class="header-anchor" href="#servlet3-1-3-0-区别" aria-hidden="true">#</a> servlet3.1 3.0 区别</h3><h3 id="emebdtomcat-springmvc-restcontroller启用" tabindex="-1"><a class="header-anchor" href="#emebdtomcat-springmvc-restcontroller启用" aria-hidden="true">#</a> emebdtomcat springmvc restController启用</h3><ul><li>只启用了根目录，多级目录未启用</li></ul><h3 id="http1-0-2-0" tabindex="-1"><a class="header-anchor" href="#http1-0-2-0" aria-hidden="true">#</a> Http1.0/2.0</h3><h3 id="kotlin" tabindex="-1"><a class="header-anchor" href="#kotlin" aria-hidden="true">#</a> Kotlin</h3><h3 id="spi" tabindex="-1"><a class="header-anchor" href="#spi" aria-hidden="true">#</a> SPI</h3><h2 id="ps" tabindex="-1"><a class="header-anchor" href="#ps" aria-hidden="true">#</a> PS</h2><blockquote><p>参考：http://www.51shiping.com/3g/list.asp?id=723</p></blockquote>`,19),n=[d];function s(l,h){return a(),t("div",null,n)}const o=e(r,[["render",s],["__file","2020.html.vue"]]);export{o as default};
