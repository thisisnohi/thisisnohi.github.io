import{_ as i,p as a,q as e,a1 as l}from"./framework-449724a9.js";const n={},p=l(`<h2 id="准备工作" tabindex="-1"><a class="header-anchor" href="#准备工作" aria-hidden="true">#</a> 准备工作</h2><h3 id="重要的python库" tabindex="-1"><a class="header-anchor" href="#重要的python库" aria-hidden="true">#</a> 重要的python库</h3><ul><li><p>NumPy(Numerical Python的简称)</p><ul><li><p>科学计算的基础包</p></li><li><p>快速高效的多维数组对象ndarray。</p></li><li><p>用于对数组执行元素级计算以及直接对数组执行数学运算的函数。</p></li><li><p>用于读写硬盘上基于数组的数据集的工具。</p></li><li><p>线性代数运算、傅里叶变换，以及随机数生成。</p><p>-成熟的C API， 用于Python插件和原生C、C++、Fortran代码访问NumPy的数据结构和计算工具。</p></li></ul></li><li><p>pandas</p><ul><li>提供了快速便捷处理结构化数据的大量数据结构和函数</li></ul></li><li><p>matplotlib</p><ul><li>最流行的用于绘制图表和其它二维数据可视化的Python库</li></ul></li><li><p>IPython和Jupyter</p></li><li><p>SciPy 专门解决科学计算中各种标准问题域的包的集合</p><ul><li><p>scipy.integrate：数值积分例程和微分方程求解器。</p><p>scipy.linalg：扩展了由numpy.linalg提供的线性代数例程和矩阵分解功能。</p><p>scipy.optimize：函数优化器（最小化器）以及根查找算法。</p><p>scipy.signal：信号处理工具。</p><p>scipy.sparse：稀疏矩阵和稀疏线性系统求解器。</p><p>scipy.special：SPECFUN（这是一个实现了许多常用数学函数（如伽玛函数）的Fortran库）的包装器。</p><p>scipy.stats：标准连续和离散概率分布（如密度函数、采样器、连续分布函数等）、各种统计检验方法，以及更好的描述统计法。</p></li></ul></li><li><p>scikit-learn Python的通用机器学习工具包</p><p>​ 分类：SVM、近邻、随机森林、逻辑回归等等。</p><p>​ 回归：Lasso、岭回归等等。</p><p>​ 聚类：k-均值、谱聚类等等。</p><p>​ 降维：PCA、特征选择、矩阵分解等等。</p><p>​ 选型：网格搜索、交叉验证、度量。</p><p>​ 预处理：特征提取、标准化。</p></li><li><p>statsmodels 统计分析包</p></li></ul><h3 id="安装或升级python包" tabindex="-1"><a class="header-anchor" href="#安装或升级python包" aria-hidden="true">#</a> 安装或升级Python包</h3><ul><li>conda install package_name</li><li>pip install package_name</li><li>conda update package_name</li><li>pip install --upgrade package_name</li></ul><h2 id="常用" tabindex="-1"><a class="header-anchor" href="#常用" aria-hidden="true">#</a> 常用</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code> ipython
 jupyter notebook
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="惯例" tabindex="-1"><a class="header-anchor" href="#惯例" aria-hidden="true">#</a> 惯例</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
import statsmodels as sm
from pandas import Series, DataFrame
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="行话" tabindex="-1"><a class="header-anchor" href="#行话" aria-hidden="true">#</a> 行话</h3><ul><li>数据规整（Munge/Munging/Wrangling） 指的是将非结构化和（或）散乱数据处理为结构化或整洁形式的整个过程。这几个词已经悄悄成为当今数据黑客们的行话了。Munge这个词跟Lunge押韵。</li><li>伪码（Pseudocode） 算法或过程的“代码式”描述，而这些代码本身并不是实际有效的源代码</li><li>语法糖（Syntactic sugar） 这是一种编程语法，它并不会带来新的特性，但却能使代码更易读、更易写。</li></ul><h2 id="数据" tabindex="-1"><a class="header-anchor" href="#数据" aria-hidden="true">#</a> 数据</h2><ul><li>各章的示例数据都存放在GitHub上：http://github.com/pydata/pydata-book</li><li>/Users/nohi/work/workspaces-nohi/python/pydata-book</li></ul>`,13),t=[p];function s(r,d){return a(),e("div",null,t)}const c=i(n,[["render",s],["__file","01_准备工作.html.vue"]]);export{c as default};
