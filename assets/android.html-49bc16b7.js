import{_ as t,p as e,q as d,a1 as l}from"./framework-449724a9.js";const a={},i=l(`<h1 id="android" tabindex="-1"><a class="header-anchor" href="#android" aria-hidden="true">#</a> Android</h1><ul><li><p>Init.gradle</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>allprojects {
    repositories {
        maven { url &#39;file:/Users/nohi/data/repo&#39;}
        mavenLocal()
        maven { name &quot;Alibaba&quot; ; url &quot;https://maven.aliyun.com/repository/public&quot; }
        maven { url &#39;http://maven.aliyun.com/nexus/content/repositories/central/&#39; }
        maven { url &quot;http://maven.oschina.net/content/groups/public/&quot; } 
        mavenCentral()
    }

    buildscript { 
        repositories { 
            maven { name &quot;Alibaba&quot; ; url &#39;https://maven.aliyun.com/repository/public&#39; }
            maven { name &quot;M2&quot; ; url &#39;https://plugins.gradle.org/m2/&#39; }
        }
    }
}
切记不要配置： maven { name &quot;Bstek&quot; ; url &quot;http://nexus.bsdn.org/content/groups/public/&quot; }
这玩意里面的包不对，折腾了我几天
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="网站" tabindex="-1"><a class="header-anchor" href="#网站" aria-hidden="true">#</a> 网站</h2><ul><li>https://developer.android.google.cn/studio/build/application-id.html?hl=zh-cn</li><li>Android 教程： https://www.w3cschool.cn/android/android-application-components.html</li><li>UI设计：摹客网：https://app.mockplus.cn/app/sTqAu93NpX/storyboard</li></ul><h2 id="android-应用程序组件" tabindex="-1"><a class="header-anchor" href="#android-应用程序组件" aria-hidden="true">#</a> Android 应用程序组件</h2><table><thead><tr><th style="text-align:left;">组件</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">Activities</td><td style="text-align:left;">描述UI，并且处理用户与机器屏幕的交互。</td></tr><tr><td style="text-align:left;">Services</td><td style="text-align:left;">处理与应用程序关联的后台操作。</td></tr><tr><td style="text-align:left;">Broadcast Receivers</td><td style="text-align:left;">处理Android操作系统和应用程序之间的通信。</td></tr><tr><td style="text-align:left;">Content Providers</td><td style="text-align:left;">处理数据和数据库管理方面的问题。</td></tr></tbody></table><p>广播接收器是<strong>BroadcastReceiver</strong>类的一个子类，每个消息以<strong>Intent</strong>对象的形式来广播。</p><h2 id="附件组件" tabindex="-1"><a class="header-anchor" href="#附件组件" aria-hidden="true">#</a> 附件组件</h2><table><thead><tr><th style="text-align:left;">组件</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">Fragments</td><td style="text-align:left;">代表活动中的一个行为或者一部分用户界面。</td></tr><tr><td style="text-align:left;">Views</td><td style="text-align:left;">绘制在屏幕上的UI元素，包括按钮，列表等。</td></tr><tr><td style="text-align:left;">Layouts</td><td style="text-align:left;">控制屏幕格式，展示视图外观的View的继承。</td></tr><tr><td style="text-align:left;">Intents</td><td style="text-align:left;">组件间的消息连线。</td></tr><tr><td style="text-align:left;">Resources</td><td style="text-align:left;">外部元素，例如字符串资源、常量资源及图片资源等。</td></tr><tr><td style="text-align:left;">Manifest</td><td style="text-align:left;">应用程序的配置文件。</td></tr></tbody></table><p>res/ 目录在各种子目录中包含了所有的资源。这里有一个图片资源，两个布局资源和一个字符串资源文件。下表详细的给出了在项目中 res/ 目录里面支持的资源。</p><table><thead><tr><th style="text-align:left;">目录</th><th style="text-align:left;">资源类型</th></tr></thead><tbody><tr><td style="text-align:left;">anim/</td><td style="text-align:left;">定义动画属性的XML文件。它们被保存在res/anim/文件夹下，通过R.anim类访问</td></tr><tr><td style="text-align:left;">color/</td><td style="text-align:left;">定义颜色状态列表的XML文件。它们被保存在res/color/文件夹下，通过R.color类访问</td></tr><tr><td style="text-align:left;">drawable/</td><td style="text-align:left;">图片文件，如.png,.jpg,.gif或者XML文件，被编译为位图、状态列表、形状、动画图片。它们被保存在res/drawable/文件夹下，通过R.drawable类访问</td></tr><tr><td style="text-align:left;">layout/</td><td style="text-align:left;">定义用户界面布局的XML文件。它们被保存在res/layout/文件夹下，通过R.layout类访问</td></tr><tr><td style="text-align:left;">menu/</td><td style="text-align:left;">定义应用程序菜单的XML文件，如选项菜单，上下文菜单，子菜单等。它们被保存在res/menu/文件夹下，通过R.menu类访问</td></tr><tr><td style="text-align:left;">raw/</td><td style="text-align:left;">任意的文件以它们的原始形式保存。需要根据名为R.raw.filename的资源ID，通过调用Resource.openRawResource()来打开raw文件</td></tr><tr><td style="text-align:left;">values/</td><td style="text-align:left;">包含简单值(如字符串，整数，颜色等)的XML文件。这里有一些文件夹下的资源命名规范。arrays.xml代表数组资源，通过R.array类访问；integers.xml代表整数资源，通过R.integer类访问；bools.xml代表布尔值资源，通过R.bool类访问；colors.xml代表颜色资源，通过R.color类访问；dimens.xml代表维度值，通过R.dimen类访问；strings.xml代表字符串资源，通过R.string类访问；styles.xml代表样式资源，通过R.style类访问</td></tr><tr><td style="text-align:left;">xml/</td><td style="text-align:left;">可以通过调用Resources.getXML()来在运行时读取任意的XML文件。可以在这里保存运行时使用的各种配置文件</td></tr></tbody></table><ul><li><p>使用资源</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Java 文字：txtName.setText(getResources().getText(R.string.name)); 
图片：imgIcon.setBackgroundDrawableResource(R.drawable.icon); 
颜色：txtName.setTextColor(getResouces().getColor(R.color.red)); 
布局：setContentView(R.layout.main);
控件：txtName = (TextView)findViewById(R.id.txt_name);


&lt;TextView android:text=&quot;@string/hello_world&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:background = &quot;@drawable/img_back&quot;/&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="activity-类" tabindex="-1"><a class="header-anchor" href="#activity-类" aria-hidden="true">#</a> Activity 类</h2><table><thead><tr><th style="text-align:left;">回调</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">onCreate()</td><td style="text-align:left;">这是第一个回调，在活动第一次创建是调用</td></tr><tr><td style="text-align:left;">onStart()</td><td style="text-align:left;">这个回调在活动为用户可见时被调用</td></tr><tr><td style="text-align:left;">onResume()</td><td style="text-align:left;">这个回调在应用程序与用户开始可交互的时候调用</td></tr><tr><td style="text-align:left;">onPause()</td><td style="text-align:left;">被暂停的活动无法接受用户输入，不能执行任何代码。当当前活动将要被暂停，上一个活动将要被恢复是调用</td></tr><tr><td style="text-align:left;">onStop()</td><td style="text-align:left;">当活动不在可见时调用</td></tr><tr><td style="text-align:left;">onDestroy()</td><td style="text-align:left;">当活动被系统销毁之前调用</td></tr><tr><td style="text-align:left;">onRestart()</td><td style="text-align:left;">当活动被停止以后重新打开时调用</td></tr></tbody></table><h2 id="android-drawable-详解-教你画画" tabindex="-1"><a class="header-anchor" href="#android-drawable-详解-教你画画" aria-hidden="true">#</a> Android Drawable 详解（教你画画！）</h2><blockquote><p>参考：https://www.cnblogs.com/Jeely/p/11045042.html</p></blockquote><h3 id="drawable分类" tabindex="-1"><a class="header-anchor" href="#drawable分类" aria-hidden="true">#</a> Drawable分类</h3><table><thead><tr><th>No</th><th>xml标签</th><th>Class类</th><th>含义</th></tr></thead><tbody><tr><td>1</td><td>shape</td><td>ShapeDrawable</td><td>特定形状，模型的图样</td></tr><tr><td>2</td><td>selector</td><td>StateListDrawable</td><td>不同状态选择不同的图样</td></tr><tr><td>3</td><td>layer-list</td><td>LayerDrawable</td><td>层叠图样</td></tr><tr><td>4</td><td>level-list</td><td>LevelListDrawable</td><td>不同程度图样</td></tr><tr><td>5</td><td>transition</td><td>TransitionDrawable</td><td>渐变图样</td></tr><tr><td>6</td><td>ripple</td><td>RippleDrawable</td><td>波纹图样</td></tr><tr><td>7</td><td>inset</td><td>InsetDrawable</td><td>内嵌图样</td></tr><tr><td>8</td><td>scale</td><td>ScaleDrawable</td><td>缩放图样</td></tr><tr><td>9</td><td>clip</td><td>ClipDrawable</td><td>剪切图样</td></tr><tr><td>10</td><td>rotate</td><td>RotateDrawable</td><td>旋转图样</td></tr><tr><td>11</td><td>animation-list</td><td>AnimationDrawable</td><td>动画效果</td></tr><tr><td>12</td><td>bitmap</td><td>BitmapDrawable</td><td>图片图样</td></tr><tr><td>13</td><td>nine-patch</td><td>NinePatchDrawable</td><td>.9图</td></tr></tbody></table>`,18),n=[i];function r(s,o){return e(),d("div",null,n)}const u=t(a,[["render",r],["__file","android.html.vue"]]);export{u as default};
