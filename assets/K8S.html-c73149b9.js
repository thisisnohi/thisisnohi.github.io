import{_ as o,M as s,p as a,q as i,R as e,t,N as l,a1 as r}from"./framework-449724a9.js";const d="/assets/components-of-kubernetes-cd7b9b2d.svg",c={},h=r(`<h1 id="k8s" tabindex="-1"><a class="header-anchor" href="#k8s" aria-hidden="true">#</a> K8S</h1><blockquote><p>add by nohi 20221224</p><p>💁</p><p>推荐教程</p><ul><li><p>13_v1.26(docker+containerd+CRI-O)： 跟着视频学，可以了解排错过程，尤其对小白用户，基础命令不熟悉，错误不知如何排查</p><ul><li>缺点： <ul><li>没有资料(资料需要购买，我对着视频以及其他教程手工输入)</li><li>中间过程不顺畅（其实也是优点，可以了解排错过程，这里很感谢老师，至少我了解不少排错过程和思路）</li></ul></li></ul></li><li><p>14_Docker+k8s教程 渐进式学习k8s教程</p><p>k8s版本v1.18，OS：centos7.X （本人使用centos8.5 + k8sv1.26.0， 本着折腾的原则，一步一步尝试安装）</p><ul><li><p>缺点</p><ul><li><p>k8s版本v1.18，OS：centos7.X 非最新版本</p></li><li><p>中间有章节路过，如第三天教程 3.5后，缺少 pv pvc storageclass 和 helm、harbor安装</p><p>(本着折腾的原则，本资料对应章节已做修改，并且安装完成)</p></li></ul></li></ul></li></ul></blockquote><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>journalctl -xeu kubelet 日志目录：/run/log/journal
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3),u={href:"https://kubernetes.io/zh-cn/docs/tasks/tools/install-kubectl-linux/",target:"_blank",rel:"noopener noreferrer"},_=r('<h2 id="可以做什么" tabindex="-1"><a class="header-anchor" href="#可以做什么" aria-hidden="true">#</a> 可以做什么</h2><ul><li><p><strong>服务发现和负载均衡</strong></p><p>Kubernetes 可以使用 DNS 名称或自己的 IP 地址来暴露容器。 如果进入容器的流量很大， Kubernetes 可以负载均衡并分配网络流量，从而使部署稳定。</p></li><li><p><strong>存储编排</strong></p><p>Kubernetes 允许你自动挂载你选择的存储系统，例如本地存储、公共云提供商等。</p></li><li><p><strong>自动部署和回滚</strong></p><p>你可以使用 Kubernetes 描述已部署容器的所需状态， 它可以以受控的速率将实际状态更改为期望状态。 例如，你可以自动化 Kubernetes 来为你的部署创建新容器， 删除现有容器并将它们的所有资源用于新容器。</p></li><li><p><strong>自动完成装箱计算</strong></p><p>你为 Kubernetes 提供许多节点组成的集群，在这个集群上运行容器化的任务。 你告诉 Kubernetes 每个容器需要多少 CPU 和内存 (RAM)。 Kubernetes 可以将这些容器按实际情况调度到你的节点上，以最佳方式利用你的资源。</p></li><li><p><strong>自我修复</strong></p><p>Kubernetes 将重新启动失败的容器、替换容器、杀死不响应用户定义的运行状况检查的容器， 并且在准备好服务之前不将其通告给客户端。</p></li><li><p><strong>密钥与配置管理</strong></p><p>Kubernetes 允许你存储和管理敏感信息，例如密码、OAuth 令牌和 ssh 密钥。 你可以在不重建容器镜像的情况下部署和更新密钥和应用程序配置，也无需在堆栈配置中暴露密钥。</p></li></ul><h2 id="组件" tabindex="-1"><a class="header-anchor" href="#组件" aria-hidden="true">#</a> 组件</h2><ul><li><p>一组工作机器，称为节点，每个集群至少有一个工作节点</p></li><li><p>工作节点会托管 Pod ，而 Pod 就是作为应用负载的组件</p><p>可以在 Kubernetes 中创建和管理的、最小的可部署的计算单元。</p></li><li><p>控制平面管理集群中的工作节点和 Pod。</p></li><li><p>在生产环境中，控制平面通常跨多台计算机运行， 一个集群通常运行多个节点，提供容错性和高可用性。</p></li></ul><p><img src="'+d+'" alt="Kubernetes 的组件"></p><h3 id="控制平面组件-control-plane-components" tabindex="-1"><a class="header-anchor" href="#控制平面组件-control-plane-components" aria-hidden="true">#</a> 控制平面组件（Control Plane Components）</h3><p>控制平面组件会为集群做出全局决策，比如资源的调度。 以及检测和响应集群事件，例如当不满足部署的 replicas 字段时， 要启动新的 pod</p>',7),p=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"center"}},"组件"),e("th",{style:{"text-align":"left"}},"说明")])],-1),b=e("tr",null,[e("td",{style:{"text-align":"center"}},"etcd"),e("td",{style:{"text-align":"left"}},[t("一致且高度可用的键值存储，用作 Kubernetes 的所有集群数据的后台数据库。"),e("br"),t("保存整个集群的状态")])],-1),f=e("td",{style:{"text-align":"center"}},"apiserver",-1),k={style:{"text-align":"left"}},g={href:"https://kubernetes.io/zh-cn/docs/reference/glossary/?all=true#term-control-plane",target:"_blank",rel:"noopener noreferrer"},x=e("br",null,null,-1),y=e("td",{style:{"text-align":"center"}},"Controller manager",-1),m={style:{"text-align":"left"}},v={href:"https://kubernetes.io/zh-cn/docs/reference/command-line-tools-reference/kube-controller-manager/",target:"_blank",rel:"noopener noreferrer"},S={href:"https://kubernetes.io/zh-cn/docs/reference/glossary/?all=true#term-control-plane",target:"_blank",rel:"noopener noreferrer"},K={href:"https://kubernetes.io/zh-cn/docs/concepts/architecture/controller/",target:"_blank",rel:"noopener noreferrer"},C=e("br",null,null,-1),w=e("br",null,null,-1),P=e("br",null,null,-1),I=e("br",null,null,-1),z=e("br",null,null,-1),E=e("td",{style:{"text-align":"center"}},"scheduler",-1),V={style:{"text-align":"left"}},B=e("code",null,"kube-scheduler",-1),D={href:"https://kubernetes.io/zh-cn/docs/reference/glossary/?all=true#term-control-plane",target:"_blank",rel:"noopener noreferrer"},N={href:"https://kubernetes.io/zh-cn/docs/concepts/architecture/nodes/",target:"_blank",rel:"noopener noreferrer"},A={href:"https://kubernetes.io/zh-cn/docs/concepts/workloads/pods/",target:"_blank",rel:"noopener noreferrer"},O=e("br",null,null,-1),q=e("tr",null,[e("td",{style:{"text-align":"center"}},"kubelet"),e("td",{style:{"text-align":"left"}},"负责维护容器的生命周期，同时也负责Volumn(CVI)和网络(CNI)的管理;")],-1),R=e("tr",null,[e("td",{style:{"text-align":"center"}},"Container runtime"),e("td",{style:{"text-align":"left"}},"负责镜像管理以及Pod和容器的真正运行(CRI);")],-1),F=e("tr",null,[e("td",{style:{"text-align":"center"}},"kube-proxy"),e("td",{style:{"text-align":"left"}},"负责为Service提供cluster内部的服务发现和负载均衡")],-1),j=e("h3",{id:"node组件",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#node组件","aria-hidden":"true"},"#"),t(" NODE组件")],-1),M=e("p",null,"节点组件会在每个节点上运行，负责维护运行的 Pod 并提供 Kubernetes 运行环境。",-1),J=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"center"}},"组件"),e("th",{style:{"text-align":"left"}},"说明")])],-1),L=e("td",{style:{"text-align":"center"}},"kubelet",-1),U={style:{"text-align":"left"}},X=e("code",null,"kubelet",-1),G={href:"https://kubernetes.io/zh-cn/docs/concepts/architecture/nodes/",target:"_blank",rel:"noopener noreferrer"},H={href:"https://kubernetes.io/zh-cn/docs/concepts/overview/what-is-kubernetes/#why-containers",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://kubernetes.io/zh-cn/docs/concepts/workloads/pods/",target:"_blank",rel:"noopener noreferrer"},T=e("br",null,null,-1),Z=e("tr",null,[e("td",{style:{"text-align":"center"}},"Container runtime"),e("td",{style:{"text-align":"left"}},[t("容器运行环境是负责运行容器的软件。"),e("br"),t("负责镜像管理以及Pod和容器的真正运行(CRI);")])],-1),W=e("td",{style:{"text-align":"center"}},"kube-proxy",-1),Y={style:{"text-align":"left"}},$={href:"https://kubernetes.io/zh-cn/docs/reference/command-line-tools-reference/kube-proxy/",target:"_blank",rel:"noopener noreferrer"},ee={href:"https://kubernetes.io/zh-cn/docs/concepts/architecture/nodes/",target:"_blank",rel:"noopener noreferrer"},te={href:"https://kubernetes.io/zh-cn/docs/concepts/services-networking/service/",target:"_blank",rel:"noopener noreferrer"},ne=e("br",null,null,-1),le=e("tr",null,[e("td",{style:{"text-align":"center"}}),e("td",{style:{"text-align":"left"}})],-1),re=e("tr",null,[e("td",{style:{"text-align":"center"}}),e("td",{style:{"text-align":"left"}})],-1),oe=e("tr",null,[e("td",{style:{"text-align":"center"}}),e("td",{style:{"text-align":"left"}})],-1),se=e("tr",null,[e("td",{style:{"text-align":"center"}}),e("td",{style:{"text-align":"left"}})],-1),ae=r('<h3 id="扩展组件" tabindex="-1"><a class="header-anchor" href="#扩展组件" aria-hidden="true">#</a> 扩展组件</h3><table><thead><tr><th style="text-align:center;">组件</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">kube-dns</td><td style="text-align:left;">负责为整个集群提供DNS服务</td></tr><tr><td style="text-align:center;">Ingress Controller</td><td style="text-align:left;">为服务提供外网入口</td></tr><tr><td style="text-align:center;">Heapster</td><td style="text-align:left;">提供资源监控</td></tr><tr><td style="text-align:center;">DashBoard</td><td style="text-align:left;">提供GUI</td></tr><tr><td style="text-align:center;">Federation</td><td style="text-align:left;">提供跨可用区的集群</td></tr><tr><td style="text-align:center;">Fluentd-elasticsearch</td><td style="text-align:left;">提供集群日志采集、存储与查询</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;"></td></tr></tbody></table><h2 id="_1-安装教程" tabindex="-1"><a class="header-anchor" href="#_1-安装教程" aria-hidden="true">#</a> 1 安装教程</h2><h3 id="_10-kubeadm安装部署k8s1-22" tabindex="-1"><a class="header-anchor" href="#_10-kubeadm安装部署k8s1-22" aria-hidden="true">#</a> 10_kubeadm安装部署k8s1.22</h3>',4),ie=e("p",null,"见：K8S安装",-1),de={href:"https://www.bilibili.com/video/BV1cR4y1f7Ac/?spm_id_from=333.337.search-card.all.click&vd_source=9004ce053a52d5930f71e230579961e7",target:"_blank",rel:"noopener noreferrer"},ce=e("ul",null,[e("li",null,[e("p",null,"OS: centos 8.5")]),e("li",null,[e("p",null,":happy: 安装完成")])],-1),he=e("h3",{id:"_11-v1-26-安装",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_11-v1-26-安装","aria-hidden":"true"},"#"),t(" 11_v1.26 安装")],-1),ue={href:"https://www.bilibili.com/video/BV1Vg411b7sB/?spm_id_from=333.1007.top_right_bar_window_history.content.click&vd_source=9004ce053a52d5930f71e230579961e7",target:"_blank",rel:"noopener noreferrer"},_e=e("p",null,"20220106 未安装成功，改为 v1.26+containerd方式",-1),pe=e("p",null,"20220207 安装成功，具体见：14_Docker+k8s教程.md",-1),be=e("ul",null,[e("li",null,"OS: centos 8.5"),e("li",null,[t("😔 安装失败 "),e("code",null,"->"),t(" 😆 安装成功")])],-1),fe=e("h3",{id:"_12-v1-26-containerd",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_12-v1-26-containerd","aria-hidden":"true"},"#"),t(" 12_v1.26+Containerd")],-1),ke=e("p",null,"create by nohi 20230106",-1),ge={href:"https://blog.frognew.com/2023/01/kubeadm-install-kubernetes-1.26.html#22-%E4%BD%BF%E7%94%A8kubeadm-init%E5%88%9D%E5%A7%8B%E5%8C%96%E9%9B%86%E7%BE%A4",target:"_blank",rel:"noopener noreferrer"},xe=e("ul",null,[e("li",null,"OS: centos 8.5"),e("li",null,":happy: 安装完成")],-1),ye=e("h3",{id:"_13-v1-26-docker-containerd-cri-o",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_13-v1-26-docker-containerd-cri-o","aria-hidden":"true"},"#"),t(" 13_v1.26(docker+containerd+CRI-O)")],-1),me=e("p",null,"create by nohi 20230112",-1),ve={href:"https://www.bilibili.com/video/BV1V8411N78a/?spm_id_from=333.788&vd_source=9004ce053a52d5930f71e230579961e7",target:"_blank",rel:"noopener noreferrer"},Se=e("p",null,"K8s1.26 + docker + containerd + cri-o 完成",-1),Ke=e("ul",null,[e("li",null,"OS: ubuntu 22.04")],-1),Ce=e("p",null,":happy: 安装完成 👏 docker + containerd + cri-o",-1),we=e("h3",{id:"_14-docker-k8s教程",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_14-docker-k8s教程","aria-hidden":"true"},"#"),t(" 14_Docker+k8s教程")],-1),Pe=e("p",null,"create by nohi 20230112",-1),Ie={href:"https://www.bilibili.com/video/BV1Fv4y1v7CE/?t=639.8&vd_source=9004ce053a52d5930f71e230579961e7",target:"_blank",rel:"noopener noreferrer"},ze=e("p",null,[t("💽 "),e("a",{href:"9z5h"},"课件"),t(" 提取码：9z5h")],-1),Ee={href:"https://pan.baidu.com/s/1SCdVq9NPEZg3hzM4jIhQrw",target:"_blank",rel:"noopener noreferrer"},Ve=e("p",null,"start: 20230204",-1),Be=e("h2",{id:"关键知识",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#关键知识","aria-hidden":"true"},"#"),t(" 关键知识")],-1),De=e("h3",{id:"satefulset、deployment",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#satefulset、deployment","aria-hidden":"true"},"#"),t(" SatefulSet、Deployment")],-1),Ne=e("blockquote",null,[e("p",null,[e("strong",null,"StatefulSet"),t(" 和 "),e("strong",null,"Deployment"),t(" 作为我们在 k8s 中常用的控制器（工作负载），以不同方式管理着 Pod。通常情况下，StatefulSet 用于部署有状态应用，Deployment 则用于部署无状态应用。")])],-1);function Ae(Oe,qe){const n=s("ExternalLinkIcon");return a(),i("div",null,[h,e("p",null,[t("🕸️ "),e("a",u,[t("官网"),l(n)])]),_,e("table",null,[p,e("tbody",null,[b,e("tr",null,[f,e("td",k,[t("API 服务器是 Kubernetes "),e("a",g,[t("控制平面"),l(n)]),t("的组件， 该组件负责公开了 Kubernetes API，负责处理接受请求的工作。 API 服务器是 Kubernetes 控制平面的前端。"),x,t("提供了资源操作的唯一入口 ，并提供认证、授权、访问控制、API注册和发现等机制;")])]),e("tr",null,[y,e("td",m,[e("a",v,[t("kube-controller-manager"),l(n)]),t(" 是"),e("a",S,[t("控制平面"),l(n)]),t("的组件， 负责运行"),e("a",K,[t("控制器"),l(n)]),t("进程。"),C,t("负责维护集群的状态，比如故障检测、自动扩展、滚动更新等;"),w,t(" 1. 节点控制器（Node Controller）：负责在节点出现故障时进行通知和响应 "),P,t(" 2. 任务控制器（Job Controller）：监测代表一次性任务的 Job 对象，然后创建 Pods 来运行这些任务直至完成"),I,t(" 3. 端点分片控制器（EndpointSlice controller）：填充端点分片（EndpointSlice）对象（以提供 Service 和 Pod 之间的链接）。 "),z,t(" 4. 服务账号控制器（ServiceAccount controller）：为新的命名空间创建默认的服务账号（ServiceAccount）。")])]),e("tr",null,[E,e("td",V,[B,t(" 是"),e("a",D,[t("控制平面"),l(n)]),t("的组件， 负责监视新创建的、未指定运行"),e("a",N,[t("节点（node）"),l(n)]),t("的 "),e("a",A,[t("Pods"),l(n)]),t("， 并选择节点来让 Pod 在上面运行。"),O,t("负责资源的调度，按照预定的调度策略将Pod调度到相应的机器上")])]),q,R,F])]),j,M,e("table",null,[J,e("tbody",null,[e("tr",null,[L,e("td",U,[X,t(" 会在集群中每个"),e("a",G,[t("节点（node）"),l(n)]),t("上运行。 它保证"),e("a",H,[t("容器（containers）"),l(n)]),t("都运行在 "),e("a",Q,[t("Pod"),l(n)]),t(" 中。"),T,t("负责维护容器的生命周期，同时也负责Volumn(CVI)和网络(CNI)的管理;")])]),Z,e("tr",null,[W,e("td",Y,[e("a",$,[t("kube-proxy"),l(n)]),t(" 是集群中每个"),e("a",ee,[t("节点（node）"),l(n)]),t("上所运行的网络代理， 实现 Kubernetes "),e("a",te,[t("服务（Service）"),l(n)]),t(" 概念的一部分。"),ne,t("负责为Service提供cluster内部的服务发现和负载均衡")])]),le,re,oe,se])]),ae,e("blockquote",null,[ie,e("p",null,[t("📹 "),e("a",de,[t("视频教程"),l(n)])])]),ce,he,e("blockquote",null,[e("p",null,[t("安装视频参见："),e("a",ue,[t("kubernetes 1.26版本上线，90分钟入门精讲"),l(n)])]),_e,pe]),be,fe,e("blockquote",null,[ke,e("p",null,[t("参见："),e("a",ge,[t("使用kubeadm部署Kubernetes 1.26"),l(n)])])]),xe,ye,e("blockquote",null,[me,e("p",null,[t("👉 "),e("a",ve,[t("Kubeadm安装K8s-1.26.0（docker+containerd+CRI-O)"),l(n)])]),Se]),Ke,Ce,we,e("blockquote",null,[Pe,e("p",null,[t("🔗"),e("a",Ie,[t("Docker+k8s教程"),l(n)])]),ze,e("p",null,[t("📁 "),e("a",Ee,[t("备份课件"),l(n)]),t(" 提取码:1111")])]),Ve,Be,De,Ne])}const Fe=o(c,[["render",Ae],["__file","K8S.html.vue"]]);export{Fe as default};
