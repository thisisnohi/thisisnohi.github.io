import{_ as n,p as s,q as a,a1 as t}from"./framework-449724a9.js";const p={},o=t(`<h1 id="springbootvalidation" tabindex="-1"><a class="header-anchor" href="#springbootvalidation" aria-hidden="true">#</a> SpringBootValidation</h1><blockquote><p>create by nohi 20230626</p><p>参考：nohi-web-native</p></blockquote><h2 id="demo" tabindex="-1"><a class="header-anchor" href="#demo" aria-hidden="true">#</a> DEMO</h2><h3 id="pom-xml" tabindex="-1"><a class="header-anchor" href="#pom-xml" aria-hidden="true">#</a> pom.xml</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-validation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="实体" tabindex="-1"><a class="header-anchor" href="#实体" aria-hidden="true">#</a> 实体</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@Schema</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;Hello请求对象&quot;</span><span class="token punctuation">,</span> title <span class="token operator">=</span> <span class="token string">&quot;Hello-Req&quot;</span><span class="token punctuation">,</span> description <span class="token operator">=</span> <span class="token string">&quot;请求对象示例&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloReq</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Schema</span><span class="token punctuation">(</span>requiredMode <span class="token operator">=</span> <span class="token class-name">Schema<span class="token punctuation">.</span>RequiredMode</span><span class="token punctuation">.</span><span class="token constant">REQUIRED</span><span class="token punctuation">,</span> title <span class="token operator">=</span> <span class="token string">&quot;流水号2&quot;</span><span class="token punctuation">,</span> description <span class="token operator">=</span> <span class="token string">&quot;流水号3&quot;</span><span class="token punctuation">,</span> example <span class="token operator">=</span> <span class="token string">&quot;20230618000011110001&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> traceId<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Schema</span><span class="token punctuation">(</span>requiredMode <span class="token operator">=</span> <span class="token class-name">Schema<span class="token punctuation">.</span>RequiredMode</span><span class="token punctuation">.</span><span class="token constant">REQUIRED</span><span class="token punctuation">,</span> title <span class="token operator">=</span> <span class="token string">&quot;姓名&quot;</span><span class="token punctuation">,</span> description <span class="token operator">=</span> <span class="token string">&quot;打招的人&quot;</span><span class="token punctuation">,</span> example <span class="token operator">=</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">)</span>

    <span class="token annotation punctuation">@NotBlank</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;请输入名称&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Length</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;名称必须[{min} {max}]字符&quot;</span><span class="token punctuation">,</span> min <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span> max <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Max</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">,</span>message <span class="token operator">=</span> <span class="token string">&quot;count最大小于等于50&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Min</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span>message <span class="token operator">=</span> <span class="token string">&quot;count最小大于等于10&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> count<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@NotBlank</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;age不能为空&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> age<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="controller" tabindex="-1"><a class="header-anchor" href="#controller" aria-hidden="true">#</a> controller</h3><ul><li><p>方式1 <code>@Valid</code>直接返回异常</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;sayHello&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Operation</span><span class="token punctuation">(</span>summary <span class="token operator">=</span> <span class="token string">&quot;向某人打招呼&quot;</span><span class="token punctuation">,</span> description <span class="token operator">=</span> <span class="token string">&quot;向某人打招呼, 演示Operation/Schema用法&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">HelloResp</span> <span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Valid</span> <span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">HelloReq</span> req<span class="token punctuation">)</span><span class="token punctuation">{</span>
  log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;请求对象:{}&quot;</span><span class="token punctuation">,</span> <span class="token class-name">JSONObject</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">HelloResp</span> resp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HelloResp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">BeanUtils</span><span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> resp<span class="token punctuation">)</span><span class="token punctuation">;</span>
  resp<span class="token punctuation">.</span><span class="token function">setRetCode</span><span class="token punctuation">(</span><span class="token string">&quot;SUC&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  resp<span class="token punctuation">.</span><span class="token function">setRetMsg</span><span class="token punctuation">(</span><span class="token string">&quot;响应信息...&quot;</span> <span class="token operator">+</span> req<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> resp<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>方式2<code>@Validated</code>原程序内部返回异常</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;sayHello2&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Operation</span><span class="token punctuation">(</span>summary <span class="token operator">=</span> <span class="token string">&quot;向某人打招呼2&quot;</span><span class="token punctuation">,</span> description <span class="token operator">=</span> <span class="token string">&quot;向某人打招呼, 演示Operation/Schema用法, 增加Validated校验，程序中判断是否校验通过，返回约定格式报文&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">HelloResp</span> <span class="token function">sayHello2</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Validated</span> <span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">HelloReq</span> req<span class="token punctuation">,</span> <span class="token class-name">BindingResult</span> results<span class="token punctuation">)</span><span class="token punctuation">{</span>
  log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;请求对象:{}&quot;</span><span class="token punctuation">,</span> <span class="token class-name">JSONObject</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token class-name">HelloResp</span> resp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HelloResp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">BeanUtils</span><span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> resp<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 把实体注解中的错误信息返回</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>results<span class="token punctuation">.</span><span class="token function">hasErrors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    resp<span class="token punctuation">.</span><span class="token function">setRetCode</span><span class="token punctuation">(</span><span class="token string">&quot;ERROR&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    resp<span class="token punctuation">.</span><span class="token function">setRetMsg</span><span class="token punctuation">(</span><span class="token string">&quot;响应信息...&quot;</span> <span class="token operator">+</span> results<span class="token punctuation">.</span><span class="token function">getFieldError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDefaultMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> resp<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  resp<span class="token punctuation">.</span><span class="token function">setRetCode</span><span class="token punctuation">(</span><span class="token string">&quot;SUC&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  resp<span class="token punctuation">.</span><span class="token function">setRetMsg</span><span class="token punctuation">(</span><span class="token string">&quot;响应信息...&quot;</span> <span class="token operator">+</span> req<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> resp<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="service" tabindex="-1"><a class="header-anchor" href="#service" aria-hidden="true">#</a> service</h3><p><code>Validator..validate(req)</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Knife4jService</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">Validator</span> validator<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Validated</span>
    <span class="token keyword">public</span> <span class="token class-name">HelloResp</span> <span class="token function">sayHello3</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Valid</span> <span class="token class-name">HelloReq</span> req<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;请求对象:{}&quot;</span><span class="token punctuation">,</span> <span class="token class-name">JSONObject</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token doc-comment comment">/** 校验 **/</span>
        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ConstraintViolation</span><span class="token punctuation">&lt;</span><span class="token class-name">HelloReq</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> violations <span class="token operator">=</span> validator<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token doc-comment comment">/** 构建返回对象 **/</span>
        <span class="token class-name">HelloResp</span> resp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HelloResp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">BeanUtils</span><span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> resp<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>violations<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">StringBuilder</span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">ConstraintViolation</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HelloReq</span><span class="token punctuation">&gt;</span></span> constraintViolation <span class="token operator">:</span> violations<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>constraintViolation<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            resp<span class="token punctuation">.</span><span class="token function">setRetCode</span><span class="token punctuation">(</span><span class="token string">&quot;ERROR&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            resp<span class="token punctuation">.</span><span class="token function">setRetMsg</span><span class="token punctuation">(</span><span class="token string">&quot;响应信息...&quot;</span> <span class="token operator">+</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> resp<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        resp<span class="token punctuation">.</span><span class="token function">setRetCode</span><span class="token punctuation">(</span><span class="token string">&quot;SUC&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        resp<span class="token punctuation">.</span><span class="token function">setRetMsg</span><span class="token punctuation">(</span><span class="token string">&quot;响应信息...&quot;</span> <span class="token operator">+</span> req<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> resp<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="基础" tabindex="-1"><a class="header-anchor" href="#基础" aria-hidden="true">#</a> 基础</h2><blockquote><p>参考：https://juejin.cn/post/7087100869363122189</p></blockquote><h3 id="全局异常处理" tabindex="-1"><a class="header-anchor" href="#全局异常处理" aria-hidden="true">#</a> 全局异常处理</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">nohi<span class="token punctuation">.</span>common<span class="token punctuation">.</span>web</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>validation<span class="token punctuation">.</span></span><span class="token class-name">ConstraintViolation</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>validation<span class="token punctuation">.</span></span><span class="token class-name">ConstraintViolationException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>validation<span class="token punctuation">.</span></span><span class="token class-name">BindException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>validation<span class="token punctuation">.</span></span><span class="token class-name">BindingResult</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>validation<span class="token punctuation">.</span></span><span class="token class-name">ObjectError</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span></span><span class="token class-name">MethodArgumentNotValidException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ExceptionHandler</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestControllerAdvice</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token class-name">Collectors</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>SpringCloud2022<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>
 *
 * <span class="token keyword">@author</span> NOHI
 * <span class="token keyword">@description</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>全局异常处理<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
 * <span class="token keyword">@date</span> 2023/06/27 12:30
 **/</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@RestControllerAdvice</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GlobalExceptionHandler</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * @RequestBody 上校验失败后抛出的异常是 MethodArgumentNotValidException 异常。
     */</span>
    <span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span><span class="token class-name">MethodArgumentNotValidException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">handleMethodArgumentNotValidException</span><span class="token punctuation">(</span><span class="token class-name">MethodArgumentNotValidException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;handleMethodArgumentNotValidException&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">BindingResult</span> bindingResult <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">getBindingResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> message <span class="token operator">=</span> bindingResult<span class="token punctuation">.</span><span class="token function">getAllErrors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">ObjectError</span><span class="token operator">::</span><span class="token function">getDefaultMessage</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">joining</span><span class="token punctuation">(</span><span class="token string">&quot;；&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;handleMethodArgumentNotValidException:{}&quot;</span><span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> message<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 不加 @RequestBody注解，校验失败抛出的则是 BindException
     */</span>
    <span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token class-name">BindException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">exceptionHandler</span><span class="token punctuation">(</span><span class="token class-name">BindException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;exceptionHandler&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> message <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">getBindingResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAllErrors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">ObjectError</span><span class="token operator">::</span><span class="token function">getDefaultMessage</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">joining</span><span class="token punctuation">(</span><span class="token string">&quot;；&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;exceptionHandler:{}&quot;</span><span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> message<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * @RequestParam 上校验失败后抛出的异常是 ConstraintViolationException
     */</span>
    <span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">ConstraintViolationException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">methodArgumentNotValid</span><span class="token punctuation">(</span><span class="token class-name">ConstraintViolationException</span> exception<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;methodArgumentNotValid&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> message <span class="token operator">=</span> exception<span class="token punctuation">.</span><span class="token function">getConstraintViolations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">ConstraintViolation</span><span class="token operator">::</span><span class="token function">getMessage</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">joining</span><span class="token punctuation">(</span><span class="token string">&quot;；&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;methodArgumentNotValid:{}&quot;</span><span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> message<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="遇到错误就抛出" tabindex="-1"><a class="header-anchor" href="#遇到错误就抛出" aria-hidden="true">#</a> 遇到错误就抛出</h3><p>检测到一个效验不通过的，就抛出异常</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ParamValidatorConfig</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">Validator</span> <span class="token function">validator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ValidatorFactory</span> validatorFactory <span class="token operator">=</span> <span class="token class-name">Validation</span><span class="token punctuation">.</span><span class="token function">byProvider</span><span class="token punctuation">(</span><span class="token class-name">HibernateValidator</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token comment">//failFast：只要出现校验失败的情况，就立即结束校验，不再进行后续的校验。</span>
                <span class="token punctuation">.</span><span class="token function">failFast</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">buildValidatorFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> validatorFactory<span class="token punctuation">.</span><span class="token function">getValidator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">MethodValidationPostProcessor</span> <span class="token function">methodValidationPostProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">MethodValidationPostProcessor</span> methodValidationPostProcessor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MethodValidationPostProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        methodValidationPostProcessor<span class="token punctuation">.</span><span class="token function">setValidator</span><span class="token punctuation">(</span><span class="token function">validator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> methodValidationPostProcessor<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="注解" tabindex="-1"><a class="header-anchor" href="#注解" aria-hidden="true">#</a> 注解</h3><p>@NotNull：适用于任何类型，不能为null，但可以是 (&quot;&quot;,&quot; &quot;)</p><p>@NotBlank：只能用于 String，不能为null，而且调用 trim() 后，长度必须大于0，必须要有实际字符。</p><p>@NotEmpty：用于 String、Collection、Map、Array，不能为null，长度必须大于0。</p><table><thead><tr><th>注解</th><th>备注</th><th>适用类型</th><th>示例</th></tr></thead><tbody><tr><td>@AssertFalse</td><td>被注释的元素必须为 <code>false</code>，null 值是有效的。</td><td>boolean 和 Boolean</td><td>@AssertFalse(message = &quot;该参数必须为 false&quot;)</td></tr><tr><td>@AssertTrue</td><td>被注释的元素必须为 <code>true</code>，null 值是有效的。</td><td>boolean 和 Boolean</td><td>@AssertTrue(message = &quot;该参数必须为 true&quot;)</td></tr><tr><td>@DecimalMax</td><td>被注释的元素必须是一个数字，其值必须小于或等于指定的最大值，null 值是有效的。</td><td>BigDecimal、BigInteger、CharSequence、byte、short、int、long以及包装类型</td><td>@DecimalMax(value = &quot;100&quot;,message = &quot;该参数不能大于 100&quot;)</td></tr><tr><td>@DecimalMin</td><td>被注释的元素必须是一个数字，其值必须大于或等于指定的最小值，null 值是有效的。</td><td>BigDecimal、BigInteger、CharSequence、byte、short、int、long以及包装类型</td><td>@DecimalMax(value = &quot;0&quot;,message = &quot;该参数不能小于 0&quot;)</td></tr><tr><td>@Digits</td><td>被注释的元素必须是可接受范围内的数字，null 值是有效的。</td><td>BigDecimal、BigInteger、CharSequence、byte、short、int、long以及包装类型</td><td>@Digits(integer = 3,fraction = 2,message = &quot;该参数整数位数不能超出3位，小数位数不能超过2位&quot;)</td></tr><tr><td>@Max</td><td>被注释的元素必须是一个数字，其值必须小于或等于指定的最大值，null 值是有效</td><td>BigDecimal、BigInteger、byte、short、int、long以及包装类型</td><td>@Max(value = 200,message = &quot;最大金额不能超过 200&quot;)</td></tr><tr><td>@Min</td><td>被注释的元素必须是一个数字，其值必须大于或等于指定的最小值，null 值是有效的。</td><td>BigDecimal、BigInteger、byte、short、int、long以及包装类型</td><td>@Min(value = 0,message = &quot;最小金额不能小于 0&quot;)</td></tr><tr><td>@Negative</td><td>被注释的元素必须是负数，null 值是有效</td><td>BigDecimal、BigInteger、byte、short、int、long、float、double 以及包装类型</td><td>@Negative(message = &quot;必须是负数&quot;)</td></tr><tr><td>@NegativeOrZero</td><td>被注释的元素必须是负数或 0，null 值是有效的。</td><td>BigDecimal、BigInteger、byte、short、int、long、float、double 以及包装类型</td><td>@NegativeOrZero(message = &quot;必须是负数或者为0&quot;)</td></tr><tr><td>@Positive</td><td>被注释的元素必须是正数，null 值是有效的。</td><td>BigDecimal、BigInteger、byte、short、int、long、float、double 以及包装类型</td><td>@Positive(message = &quot;必须是正数&quot;)</td></tr><tr><td>@PositiveOrZero</td><td>被注释的元素必须是正数或0，null 值是有效的。</td><td>BigDecimal、BigInteger、byte、short、int、long、float、double 以及包装类型</td><td>@PositiveOrZero(message = &quot;必须是正数或者为0&quot;)</td></tr><tr><td>@Future</td><td>被注释的元素必须是未来的日期（年月日），null 值是有效的。</td><td>基本所有的时间类型都支持。常用的：Date、LocalDate、LocalDateTime、LocalTime、Instant</td><td>@Future(message = &quot;预约日期要大于当前日期&quot;)</td></tr><tr><td>@FutureOrPresent</td><td>被注释的元素必须是现在或者未来的日期（年月日），null 值是有效的。</td><td>基本所有的时间类型都支持。常用的：Date、LocalDate、LocalDateTime、LocalTime、Instant</td><td>@FutureOrPresent(message = &quot;预约日要大于当前日期&quot;)</td></tr><tr><td>@Past</td><td>被注释的元素必须是过去的日期，null 值是有效的。</td><td>基本所有的时间类型都支持。常用的：Date、LocalDate、LocalDateTime、LocalTime、Instant</td><td>@Past(message = &quot;出生日期要小于当前日期&quot;)</td></tr><tr><td>@PastOrPresent</td><td>被注释的元素必须是过去或者现在的日期，null 值是有效的。</td><td>基本所有的时间类型都支持。常用的：Date、LocalDate、LocalDateTime、LocalTime、Instant</td><td>@PastOrPresent(message = &quot;出生时间要小于当前时间&quot;)</td></tr><tr><td>@NotBlank</td><td>被注释的元素不能为空，并且必须至少包含一个非空白字符</td><td>CharSequence</td><td>@NotBlank(message = &quot;name为必传参数&quot;)</td></tr><tr><td>@NotEmpty</td><td>被注释的元素不能为 null 也不能为空</td><td>CharSequence、Collection、Map、Array</td><td>@NotEmpty(message = &quot;不能为null或者为空&quot;)</td></tr><tr><td>@NotNull</td><td>被注释的元素不能为null</td><td>任意类型</td><td>@NotNull(message = &quot;不能为null&quot;)</td></tr><tr><td>@Null</td><td>被注释的元素必须为null</td><td>任意类型</td><td>@Null(message = &quot;必须为null&quot;)</td></tr><tr><td>@Email</td><td>被注释的元素必须是格式正确的电子邮件地址，null 值是有效的。</td><td>CharSequence</td><td>@Email(message = &quot;email格式错误，请重新填写&quot;)</td></tr><tr><td>@Pattern</td><td>被注释的元素必须匹配指定的正则表达式，null 值是有效的。</td><td>CharSequence</td><td>@Pattern(regexp = &quot;^1[3456789]\\d{9}$&quot;,message = &quot;手机号格式不正确&quot;)</td></tr><tr><td>@Size</td><td>被注释的元素大小必须在指定范围内，null 值是有效的。</td><td>CharSequence、Collection、Map、Array</td><td>@Size(min = 5,max = 20,message = &quot;字符长度在 5 -20 之间&quot;)</td></tr></tbody></table>`,24),e=[o];function c(l,i){return s(),a("div",null,e)}const k=n(p,[["render",c],["__file","SpringBootValidation.html.vue"]]);export{k as default};
